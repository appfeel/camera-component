/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppCamera {
        /**
          * Switch between front and back cam
         */
        "flipCam": () => Promise<void>;
        /**
          * Stop the webcam Emits webcamStop event
         */
        "stopWebcam": () => Promise<void>;
        /**
          * Captures the picture Emits picture event
         */
        "takePicture": () => Promise<void>;
    }
    interface WebcamComponent {
    }
}
declare global {
    interface HTMLAppCameraElement extends Components.AppCamera, HTMLStencilElement {
    }
    var HTMLAppCameraElement: {
        prototype: HTMLAppCameraElement;
        new (): HTMLAppCameraElement;
    };
    interface HTMLWebcamComponentElement extends Components.WebcamComponent, HTMLStencilElement {
    }
    var HTMLWebcamComponentElement: {
        prototype: HTMLWebcamComponentElement;
        new (): HTMLWebcamComponentElement;
    };
    interface HTMLElementTagNameMap {
        "app-camera": HTMLAppCameraElement;
        "webcam-component": HTMLWebcamComponentElement;
    }
}
declare namespace LocalJSX {
    interface AppCamera {
        /**
          * Event emitted when back button push Return true to keep cam open
         */
        "onBackButton"?: (event: CustomEvent<boolean>) => void;
        /**
          * Event emitted when snap
         */
        "onPicture"?: (event: CustomEvent<any>) => void;
        /**
          * Event emitted when cam stop
         */
        "onWebcamStop"?: (event: CustomEvent<any>) => void;
    }
    interface WebcamComponent {
    }
    interface IntrinsicElements {
        "app-camera": AppCamera;
        "webcam-component": WebcamComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-camera": LocalJSX.AppCamera & JSXBase.HTMLAttributes<HTMLAppCameraElement>;
            "webcam-component": LocalJSX.WebcamComponent & JSXBase.HTMLAttributes<HTMLWebcamComponentElement>;
        }
    }
}

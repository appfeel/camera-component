/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CameraController {
        "backButtonStopCam": boolean;
        /**
          * Switch between front and back cam
         */
        "flipCam": () => Promise<void>;
        /**
          * Stop the webcam Emits webcamStop event
         */
        "stopWebcam": () => Promise<void>;
        /**
          * Captures the picture Emits picture event
         */
        "takePicture": () => Promise<void>;
    }
    interface WebcamComponent {
        "open": () => Promise<void>;
        /**
          * https://github.com/ionic-team/ionic-framework/issues/new?assignees=&labels=&template=bug_report.md&title=bug%3A+
         */
        "openGallery": () => Promise<void>;
    }
}
declare global {
    interface HTMLCameraControllerElement extends Components.CameraController, HTMLStencilElement {
    }
    var HTMLCameraControllerElement: {
        prototype: HTMLCameraControllerElement;
        new (): HTMLCameraControllerElement;
    };
    interface HTMLWebcamComponentElement extends Components.WebcamComponent, HTMLStencilElement {
    }
    var HTMLWebcamComponentElement: {
        prototype: HTMLWebcamComponentElement;
        new (): HTMLWebcamComponentElement;
    };
    interface HTMLElementTagNameMap {
        "camera-controller": HTMLCameraControllerElement;
        "webcam-component": HTMLWebcamComponentElement;
    }
}
declare namespace LocalJSX {
    interface CameraController {
        "backButtonStopCam"?: boolean;
        /**
          * Event emitted when back button is pushed
         */
        "onBackButton"?: (event: CustomEvent<void>) => void;
        /**
          * Event emitted when snap
         */
        "onPicture"?: (event: CustomEvent<any>) => void;
        /**
          * Event emitted when cam stop
         */
        "onWebcamStop"?: (event: CustomEvent<any>) => void;
    }
    interface WebcamComponent {
        /**
          * Event emitted when back button is pushed
         */
        "onBackButton"?: (event: CustomEvent<void>) => void;
        /**
          * Event emitted when snap
         */
        "onPicture"?: (event: CustomEvent<any>) => void;
        /**
          * Event emitted when cam stop
         */
        "onWebcamStop"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "camera-controller": CameraController;
        "webcam-component": WebcamComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "camera-controller": LocalJSX.CameraController & JSXBase.HTMLAttributes<HTMLCameraControllerElement>;
            "webcam-component": LocalJSX.WebcamComponent & JSXBase.HTMLAttributes<HTMLWebcamComponentElement>;
        }
    }
}
